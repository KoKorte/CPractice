//Lisätään tarvittavat kirjastot
#include <stdio.h>

//Tehdään ristinolla peli
//Mitä tarvitaan?
/*SUUNNITELMA(ei lopullinen)
-C-kieli
-Aluksi 2 pelaajaa X ja O
-Taulukko ideat     {0,0,0}     |0|0|0|      0|0|0
                    {0,0,0}     |0|0|0|      -+-+-

viestit definellä?
-STRUCT ruudukot?
-OHJE KUINKA PELATA
-Mahdollisesti x akseli 123 ja y akseli ABC
-Kysyy käyttäjältä vuoron perään akselin malliin 1A tai 3B
(printf("\nAnna x akseli: ");
   scanf("%d", x);
 printf("\nAnna y akseli: ");
   scanf("%c", y);)
   TAI YHDISTÄÄ NÄMÄ?
-Tarkistetaan että "ruudussa" ei ole aiempaa merkkiä (if empty tai is taken?)
    -> uudelleen syöttö komento (define virhe input, syötä uudelleen?)
-Ei kahta samaa merkkiä peräkkäin(toinen virhe input?)

Mahdollisia myöhempiä toimintoja:
-Pelaaja 1 ja 2 nimet
-srand yksinpeli
-Valinta yksin- tai kaksinpelille
-Valinta haluaako olla X tai O
*/

//Luodaan define viesteille
#define TURN ("vuoro. Anna luvut ja merkit muodossa x-akseli (1-3) ja y-akseli (A-C): ")
#define ERROR ("Virheellinen siirto. Yritä uudelleen.\n")
#define WINNER ("Voittaja on pelaaja ")

//  OHJE

// Valitse kuka aloittaa ensin
// Syötä numero ja kirjain muodossa esim. 1A.
// Kokeille saada 3 vierekkäin vaakaan, pystyyn tai vinoon
// ONNEA PELIIN


//Selitykset rakenteesta
/*
TERMIT JA MUUTTUJAT:

struct Area -> Area (struct), joka kuvaa yksittäistä peliruudun tilaa. Sisältää joko 'X', 'O' tai tyhjän merkin (' ').

character -> Merkkijono (char), joka kuvaa pelaajien merkkejä ('X' tai 'O') pelissä.

area[3][3] -> Kaksiulotteinen struct, jossa jokaisella ruudulla voi on merkki 'X', 'O' tai tyhjä (' ').

turn -> Merkkijono (char), joka osoittaa vuorossa olevan pelaajan ('X' tai 'O').

x -> Kokonaisluku (int), joka vastaa pelaajan syöttämää x-akselin sijaintia (1-3).

y -> Merkki (char), joka vastaa pelaajan syöttämää y-akselin sijaintia ('A', 'B' tai 'C').

FUNKTIOT:

void showStruct(struct Area area[3][3]) -> Tulostaa peliruudukon näytölle konsoliin.

int checkWin(struct Ruutu ruudukko[3][3], char merkki) -> Tarkistaa voittoehdot peliruudukossa tietylle merkille ('X' tai 'O') ja palauttaa 1 voiton tapauksessa tai 0 muuten.

int main() -> Pääohjelma, jossa pelin päälooppi pyöritellään. Siinä pyörii pelin kulku, syötöt ja voittaminen.
*/

// Luodaan struct Ruutu
struct Area 
{
    char character; // Merkki on joko 'X', 'O' tai ' '(tyhjä kohta)
};

// Funktio ruudukon näyttämiseksi
void showArea(struct Area area[3][3]) 
{
    printf("  1 2 3\n"); //Tulostetaan vaakarivi (1,2,3)
    for (int a = 0; a < 3; a++) //int a vastaa vaakariviä
    {   
        printf("%c", 'A' + a); // Tulostetaan pystyrivi (A, B, C)
        for (int b = 0; b < 3; b++)  //int b vastaa pystyriviä
        {  
            printf("|%c", area[a][b].character); // Tulostetaan ruudukko, jota pelaaja on täyttänyt
        }
        printf("|\n");  // Tulostetaan pystyrivin merkki käyttämällä "|"
        if (a < 2) 
        {
            printf("  -+-+-\n"); // Tulostetaan vaakaviiva
        }
    }
}

// Luodaan funktio, joka tarkistaa voitot pystyyn, vaakaan ja vinoon
int checkWin(struct Area area[3][3], char character) 
{
    // Tarkistetaan vaakasuorat ja pystysuorat voitot
    for (int a = 0; a < 3; a++) {
        if (area[a][0].character == character && area[a][1].character == character && area[a][2].character == character) 
        {
            return 1; // Voitto
        }
        if (area[0][a].character == character && area[1][a].character == character && area[2][a].character == character) 
        {
            return 1; // Voitto
        }
    }
    
    // Tarkistetaan ruudukko vinosti
    if (area[0][0].character == character && area[1][1].character == character && area[2][2].character == character) 
    {
        return 1; // Voitto
    }
    if (area[0][2].character == character && area[1][1].character == character && area[2][0].character == character) 
    {
        return 1; // Voitto
    }
    
    return 0; // Ei voittoa
}

int main() 
{
    //Luodaan peliruutu
    struct Area area[3][3];
    
    //Luodaan ruudukkoon tyhjät kohdat
    for (int a = 0; a < 3; a++) 
    {
        for (int b = 0; b < 3; b++) 
        {
            area[a][b].character = ' ';
        }
    }
    
    //Ensimmäisen pelaajan (X) vuoro
    char turn = 'X';
    int x, y;
    
    // Do While looppi jossa pelaaminen tapahtuu
    do {
        // Näytetään ruudukko
        showArea(area);
        
        //Kerrotaan pelaajalle, että on hänen vuoronsa antamalla %c(X tai O)
        printf("Pelaajan %c %s", turn, TURN);
            scanf("%d %c", &x, &y);     //Pelaaja syöttää ensin x numero rivin ja sitten y kirjain rivin käyttämällä ISOJA kirjaimia
        
        // Muutetaan y-akseli numeroiksi
        y = y - 'A';
        
        // Tarkistetaan, onko siirto sääntöjen mukainen
        if (x < 1 || x > 3 || y < 0 || y > 2 || area[y][x - 1].character != ' ') 
        {
            printf("%s", ERROR);
            continue;
        }
        
        // Päivitetään ruudukko
        area[y][x - 1].character = turn;
        
        // Tarkistetaan voittiko joku
        if (checkWin(area, turn)) 
        {
            showArea(area);
            printf("%s %c!\n",WINNER, turn);
            break;  // Peli päättyy
        }
        
        // Vaihdetaan vuoroa käyttämällä ternaryä
        turn = (turn == 'X') ? 'O' : 'X';
        
    } while (1); //Loopataan loputtomasti, kunnes joku on voittanut
    
    return 0;
}
