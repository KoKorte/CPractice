//Lisätään tarvittavat kirjastot
#include <stdio.h>

//Tehdään ristinolla peli
//Mitä tarvitaan?
/*SUUNNITELMA(ei lopullinen)
-C-kieli
-Aluksi 2 pelaajaa X ja O
-Taulukko ideat     {0,0,0}     |0|0|0|      0|0|0
                    {0,0,0}     |0|0|0|      -+-+-

viestit definellä?
-STRUCT ruudukot?
-OHJE KUINKA PELATA
-Mahdollisest x akseli 123 ja y akseli ABC
-Kysyy käyttäjältä vuoron perään akselin malliin 1A tai 3B
(printf("\nAnna x akseli: ");
   scanf("%d", x);
 printf("\nAnna y akseli: ");
   scanf("%c", y);)
   TAI YHDISTÄÄ NÄMÄ?
-Tarkistetaan että "ruudussa" ei ole aiempaa merkkiä (if empty tai is taken?)
    -> uudelleen syöttö komento (define virhe input, syötä uudelleen?)
-Ei kahta samaa merkkiä peräkkäin(toinen virhe input?)

Mahdollisia myöhempiä toimintoja:
-Pelaaja 1 ja 2 nimet
-srand yksinpeli
-Valinta yksin- tai kaksinpelille
-Valinta haluaako olla X tai O
*/

//Luodaan define viesteille
#define VUORO ("vuoro. Anna syöttö muodossa x-akseli (1-3) ja y-akseli (A-C): ")
#define VIRHE ("Virheellinen siirto. Yritä uudelleen.\n")
#define VOITTAJA ("Voittaja on pelaaja ")

//  OHJE

// Valitse kuka aloittaa ensin
// Syötä numero ja kirjain muodossa esim. 1A.
// Kokeille saada 3 vierekkäin vaakaan, pystyyn tai vinoon
// ONNEA PELIIN

// Luodaan struct Ruutu
struct Ruutu 
{
    char merkki; // Merkki on joko 'X', 'O' tai ' '(tyhjä kohta)
};

// Funktio ruudukon näyttämiseksi
void näytäRuudukko(struct Ruutu ruudukko[3][3]) 
{
    printf("  1 2 3\n"); //Tulostetaan vaakarivi (1,2,3)
    for (int a = 0; a < 3; a++) //int a vastaa vaakariviä
    {   
        printf("%c", 'A' + a); // Tulostetaan pystyrivi (A, B, C)
        for (int b = 0; b < 3; b++)  //int b vastaa pystyriviä
        {  
            printf("|%c", ruudukko[a][b].merkki); // Tulostetaan ruudukko, jota pelaaja on täyttänyt
        }
        printf("|\n");  // Tulostetaan pystyrivin merkki käyttämällä "|"
        if (a < 2) 
        {
            printf("  -+-+-\n"); // Tulostetaan vaakaviiva
        }
    }
}

// Luodaan funktio, joka tarkistaa voitot pystyyn, vaakaan ja vinoon
int tarkistaVoitto(struct Ruutu ruudukko[3][3], char merkki) 
{
    // Tarkistetaan vaakasuorat ja pystysuorat voitot
    for (int a = 0; a < 3; a++) {
        if (ruudukko[a][0].merkki == merkki && ruudukko[a][1].merkki == merkki && ruudukko[a][2].merkki == merkki) 
        {
            return 1; // Voitto
        }
        if (ruudukko[0][a].merkki == merkki && ruudukko[1][a].merkki == merkki && ruudukko[2][a].merkki == merkki) 
        {
            return 1; // Voitto
        }
    }
    
    // Tarkistetaan ruudukko vinosti
    if (ruudukko[0][0].merkki == merkki && ruudukko[1][1].merkki == merkki && ruudukko[2][2].merkki == merkki) 
    {
        return 1; // Voitto
    }
    if (ruudukko[0][2].merkki == merkki && ruudukko[1][1].merkki == merkki && ruudukko[2][0].merkki == merkki) 
    {
        return 1; // Voitto
    }
    
    return 0; // Ei voittoa
}

int main() 
{
    //Luodaan peliruutu
    struct Ruutu ruudukko[3][3];
    
    //Luodaan ruudukkoon tyhjät kohdat
    for (int a = 0; a < 3; a++) 
    {
        for (int b = 0; b < 3; b++) 
        {
            ruudukko[a][b].merkki = ' ';
        }
    }
    
    //Ensimmäisen pelaajan (X) vuoro
    char vuoro = 'X';
    int x, y;
    
    // Do While looppi jossa pelaaminen tapahtuu
    do {
        // Näytetään ruudukko
        näytäRuudukko(ruudukko);
        
        //Kerrotaan pelaajalle, että on hänen vuoronsa antamalla %c(X tai O)
        printf("Pelaajan %c %s", vuoro, VUORO);
            scanf("%d %c", &x, &y);     //Pelaaja syöttää ensin x numero rivin ja sitten y kirjain rivin käyttämällä ISOJA kirjaimia
        
        // Muutetaan y-akseli numeroiksi
        y = y - 'A';
        
        // Tarkistetaan, onko siirto sääntöjen mukainen
        if (x < 1 || x > 3 || y < 0 || y > 2 || ruudukko[y][x - 1].merkki != ' ') {
            printf("%s", VIRHE);
            continue;
        }
        
        // Päivitetään ruudukko
        ruudukko[y][x - 1].merkki = vuoro;
        
        // Tarkistetaan voittiko joku
        if (tarkistaVoitto(ruudukko, vuoro)) 
        {
            näytäRuudukko(ruudukko);
            printf("%s %c!\n",VOITTAJA, vuoro);
            break;  // Peli päättyy
        }
        
        // Vaihdetaan vuoroa käyttämällä ternaryä
        vuoro = (vuoro == 'X') ? 'O' : 'X';
        
    } while (1); //Loopataan loputtomasti, kunnes joku on voittanut
    
    return 0;
}
